<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="16dfae98-160b-4e2c-a167-accb142cb554" activeEnvironment="Default" name="BRAND" resourceRoot="${projectDir}" soapui-version="5.6.1" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="e1057638-6fef-41d1-9fd6-06afc56f2963" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://test.api.coronadirect.be" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://${#Project#BaseURL}</con:endpoint><con:endpoint>https://test.api.coronadirect.be</con:endpoint></con:endpoints><con:resource name="Quote" path="/external/home/insurance/v1/Quote" id="a8eb126b-5410-48b3-8a43-2255f426b779"><con:settings/><con:parameters/><con:method name="Quote 1" id="d258f3ce-75fd-4078-8bcb-e33226576ca0" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:quot="https://test.api.coronadirect.be/external/home/insurance/v1/Quote">quot:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="c6c577a0-d7fc-4174-9410-9afd13bc76ef" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://test.api.coronadirect.be</con:endpoint><con:request/><con:originalUri>https://test.api.coronadirect.be/external/home/insurance/v1/Quote</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="1b50bdc5-0094-4b6d-8a02-9f39050ebe88" wadlVersion="http://wadl.dev.java.net/2009/02" name="BRAND" type="rest" definitionUrl="percent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT"/><con:endpoints/></con:interface><con:testSuite id="9ce13f0f-b55b-474e-9b86-ccacb92aa8bf" name="QUOTEBRAND"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="84f09b22-b95d-4a66-b895-e6adc57cd247" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="V1" searchProperties="true"><con:settings/><con:testStep type="groovy" name="LoadTestData" id="1a20d4cf-6fa2-41f8-90dc-4e12875665b4"><con:settings/><con:config><script><![CDATA[import org.apache.poi.ss.usermodel.*
//import org.apache.poi.hssf.usermodel.*
//import org.apache.poi.ss.util.*
import org.apache.poi.*
import groovy.json.JsonSlurper


//Global variables
date = new Date().format( 'yyyyMMdd' )
path = "D:\\a\\1\\s\\";
def variables = testRunner.testCase.getTestStepByName("Variables")
def fail = false
errorLog = []

	
// Initiate EXCEL
 InputStream inputStream = new FileInputStream(path+"Testcases.xls");
 wb = WorkbookFactory.create(inputStream);
 ws = wb.getSheet("TestCases")  
 totalRows = ws.getPhysicalNumberOfRows()
 totalColumns = ws.getRow(0).getPhysicalNumberOfCells()

// Initiate LOG dirs
checkAndCreateFolder("Requests")
checkAndCreateFolder("Fails")


// Iterate rows / TESTCASES
for(def i=1; i<totalRows; i++){
	// RESET variables
	def request = ""
	def response = ""
	errorLog.clear()
	fail = false
	def row = ws.getRow(i)

	//Populate variables with data from excel
	for (var in variables.getPropertyList()){
		//the variable name is extracted from property list. Then, correct column is selected using the function 'getColumn()
		variables.setPropertyValue(var.getName(),row.getCell(getColumn(var.getName())).toString())
	 }
	
	//API call .run()
	testRunner.runTestStepByName("quotePost")

	//REQUEST being send
	request = context.expand( '${quotePost#RawRequest}' )
	
	//Create requestLog
	def requestLog = new File(path + "\\Requests\\" + date + "\\row " + (i+1) +".txt");
	requestLog.write (request);


	// -- RESPONSE --

	def httpResponseHeaders = context.testCase.testSteps["quotePost"].testRequest.response.responseHeaders
	def httpStatus = httpResponseHeaders["#status#"]
	def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

	
		//if JSON is not correct, statusCode will be 500
	if (httpStatusCode != "500"){
		response = context.expand( '${quotePost#Response}' )
		def jsonSlurper = new JsonSlurper()
		def object = jsonSlurper.parseText(response)
		
	// -- ASSERTIONS --
	
			//Check if server accepted the request, or if the returnCode is as expected
		try {
	 		assert object[0].control.applicationReturnCode == variables.getPropertyValue("returnCode")
		}
		catch (AssertionError e) {
			fail = true
			createErrorLogText("ApplicationReturnCode not "+ variables.getPropertyValue("returnCode")+" \n" + "errorMessage: " + object[0].control.errorMessage ,variables.getPropertyValue("returnCode"),object[0].control.applicationReturnCode)
		}
			//only if the expected returnCode is 00000, the following assertions shall be done
		if (variables.getPropertyValue("returnCode") == '00000'){
			
				//Check if BD - Building is as expected
			try {
		 		assert checkValues(object[0].results.coverages[0].grossPremium.toString(), variables.getPropertyValue("BD"))
			}
			catch (AssertionError e) {
				fail = true
				createErrorLogText("BD - Building premium FAIL",variables.getPropertyValue("BD"),object[0].results.coverages[0].grossPremium)
			}	
			
				//Check if CO / Contents is as expected
			try {
		 		assert checkValues(object[0].results.coverages[1].grossPremium.toString(), variables.getPropertyValue("CO"))
			}
			catch (AssertionError e) {
				fail = true
				createErrorLogText("CO / Contents premium FAIL",variables.getPropertyValue("CO"),object[0].results.coverages[1].grossPremium)
			}	
			
				//Check if CT / ContentsTheft is as expected
			try {
		 		assert checkValues(object[0].results.coverages[2].grossPremium.toString(), variables.getPropertyValue("CT"))
			}
			catch (AssertionError e) {
				fail = true
				createErrorLogText("CT / ContentsTheft premium FAIL",variables.getPropertyValue("CT"),object[0].results.coverages[2].grossPremium)
			}	
			
				//Check if LA / LegalAssistance is as expected
			try {
		 		assert checkValues(object[0].results.coverages[3].grossPremium.toString(), variables.getPropertyValue("LA"))
			}
			catch (AssertionError e) {
				fail = true
				createErrorLogText("LA / LegalAssistance premium FAIL",variables.getPropertyValue("LA"),object[0].results.coverages[3].grossPremium)
			}	
				//Check if AS / Assistance is as expected
			try {
		 		assert checkValues(object[0].results.coverages[4].grossPremium.toString(), variables.getPropertyValue("AS"))
			}
			catch (AssertionError e) {
				fail = true
				createErrorLogText("AS / Assistance premium FAIL",variables.getPropertyValue("AS"),object[0].results.coverages[4].grossPremium)
			}	
		}
	}
	// When httpStatusCode == 500:
	else{ 
		fail = true
		errorLog << "JSON error"
		errorLog << httpStatus
	}
		
	//Create and write Logs
	if (fail){
		log.error "  Row " + (i+1) + " - FAIL"
		writeListAsLinesToLog(errorLog,i);
		row.createCell(0).setCellValue("FAIL");
	}
	else{
		log.info "  Row " + (i+1) + " - PASS"
		row.createCell(0).setCellValue("PASS");
	}


	//stop loop
//	if(i == 1){
//		break;
//	}
}

//Save file
saveFile("Testcases");



// -- FUNCTIONS --

// Find the column number for given column name
def getColumn(name){
	def row = ws.getRow(0)
	def colmnNumber
	for (def j=1; j<totalColumns; j++) {
     	def cell = row.getCell(j)
       	//log.info cell.toString()
       	if (cell.toString() == name){
       	colmnNumber = j
       	break;
    		}
	}
	return colmnNumber
}

//create Error Log Text from given arguments
def createErrorLogText(message, expected, result){
	errorLog << message + "\n"
	errorLog << "Expected: " + expected + "\n"
	errorLog << "Result: " + result + "\n"
	errorLog << "----------------------------------------\n\n"
}


//Initiate folders
def checkAndCreateFolder(name){
	File directory = new File(path + "\\" + name + "\\" + date);
	if (! directory.exists()){
	directory.mkdir();
	}
}

//Save xls File
def saveFile(name){
	try{
		FileOutputStream fileOut = new FileOutputStream(path + name + ".xls");
		wb.write(fileOut);
		fileOut.close();
	}
	catch(FileNotFoundException e){
		//when the file is open, save in new file	
		log.error " xls FILE OPEN - Saving in new file..."
		saveFile("Testcases_NEW");
	}
}

//Write all lines of the error list to the error-log-file
def writeListAsLinesToLog(list, i){
	def errorLogFile = new File(path + "\\Fails\\" + date + "\\row " + (i+1) +".txt");
	for (line in list){
		//log.info line
		errorLogFile.append (line.toString());
	}
}

//check the difference between 2 values: <=0.05 is acceptable
def checkValues(val1,val2){
	float dec1 = Float.parseFloat(val1);
	float dec2 = Float.parseFloat(val2);
	//make the value absolute and truncate at 2 decimals
	difference = Math.abs(dec1 - dec2).trunc(2)
	if (difference > 0.05){
		return false
	}else{
		return true
	}
}


]]></script></con:config></con:testStep><con:testStep type="properties" name="Variables" id="f91b7950-8cc6-44ad-82ac-4fb516f164b5"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>volume</con:name><con:value>500</con:value></con:property><con:property><con:name>verandaCount</con:name><con:value>0</con:value></con:property><con:property><con:name>valuationChoice</con:name><con:value>AP</con:value></con:property><con:property><con:name>studyroomCount</con:name><con:value>0</con:value></con:property><con:property><con:name>streetName</con:name><con:value>Asstraat</con:value></con:property><con:property><con:name>secondHomeIndicator</con:name><con:value>false</con:value></con:property><con:property><con:name>saloncount</con:name><con:value>1</con:value></con:property><con:property><con:name>roofTypeCode</con:name><con:value>2</con:value></con:property><con:property><con:name>rentMonthlyAmount</con:name><con:value>750</con:value></con:property><con:property><con:name>postalCode</con:name><con:value>8000</con:value></con:property><con:property><con:name>otherroomCount</con:name><con:value>0</con:value></con:property><con:property><con:name>LA</con:name><con:value>11.89</con:value></con:property><con:property><con:name>insuredAmountTheftPercentage</con:name><con:value>50</con:value></con:property><con:property><con:name>indirectLossesPercentage</con:name><con:value>10</con:value></con:property><con:property><con:name>housePropertyTypeCode</con:name><con:value>1</con:value></con:property><con:property><con:name>houseNumber</con:name><con:value>1</con:value></con:property><con:property><con:name>groundFloor</con:name><con:value>false</con:value></con:property><con:property><con:name>garageCount</con:name><con:value>0</con:value></con:property><con:property><con:name>dwellingTypeCode</con:name><con:value>2</con:value></con:property><con:property><con:name>diningroomCount</con:name><con:value>1</con:value></con:property><con:property><con:name>CT</con:name><con:value>104.18</con:value></con:property><con:property><con:name>contractEffectiveDate</con:name><con:value>2022-05-25</con:value></con:property><con:property><con:name>contentsAmount</con:name><con:value>60000</con:value></con:property><con:property><con:name>commercialUsageIndicator</con:name><con:value>false</con:value></con:property><con:property><con:name>CO</con:name><con:value>0.0</con:value></con:property><con:property><con:name>cityName</con:name><con:value>BRUSSEL</con:value></con:property><con:property><con:name>bedroomCount</con:name><con:value>3</con:value></con:property><con:property><con:name>BD</con:name><con:value>0.0</con:value></con:property><con:property><con:name>bathroomCount</con:name><con:value>2</con:value></con:property><con:property><con:name>AS</con:name><con:value>229.64</con:value></con:property><con:property><con:name>returnCode</con:name><con:value>00000</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="quotePost" id="986ff311-7b97-482e-bc68-ef9d7460a942"><con:settings/><con:config service="https://test.api.coronadirect.be" resourcePath="/external/home/insurance/v1/Quote" methodName="Quote 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="quotePost" id="25618d6b-21dd-46cf-ba8e-f74838a97427" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">&#13;
  &lt;con:entry key="Content-type" value="application/json"/>&#13;
  &lt;con:entry key="Ocp-Apim-Subscription-Key" value="c21c90b45aeb4940ba952ccb71b52ed2"/>&#13;
  &lt;con:entry key="Cache-Control" value="no-cache"/>&#13;
&lt;/xml-fragment></con:setting></con:settings><con:encoding/><con:endpoint>https://test.api.coronadirect.be</con:endpoint><con:request>[
	{
	"requester": {
		"transactionIdentifier": "7CB961CC6EFA47C2C3DB57B78712D653",
		"organizationIdentifier": "CORONA",
		"coronaTransactionIdentifier": "1ADC44F8173A90D89226158CC176BDE2"
		},
		
	"persons": {
		"policyHolder": {
			"streetName": "${Variables#streetName}",
			"houseNumberIdentifier": "${Variables#houseNumber}",
			"postalCode": "${Variables#postalCode}",
			"cityName": "${Variables#cityName}",
						
			"languageCode": "2",
			"genderCode": "1",
			"firstGivenName": "KDH",
			"familyName": "Corona",
			"eMailAddress": "koen.dhoore@coronadirect.be",
			"birthDate": "1982-01-01"
			}
		},
	"contract": {
		//Adres variabelen
		"houseAddressEqualsPolicyHolderAddress":true,
		"secondHomeIndicator": ${Variables#secondHomeIndicator},

		//Woning variabelen
		"housePropertyTypeCode": "${Variables#housePropertyTypeCode}", 
		"dwellingTypeCode": "${Variables#dwellingTypeCode}",
		"commercialUsageIndicator": ${Variables#commercialUsageIndicator}, 
		"groundFloor": ${Variables#groundFloor},     

		//Waardebepaling van de woning			
		"valuationChoice": "${Variables#valuationChoice}",
		"volume": ${Variables#volume},
		
		"salonCount": ${Variables#salonCount},
		"diningroomCount": ${Variables#diningroomCount},
		"bathroomCount": ${Variables#bathroomCount},
		"bedroomCount": ${Variables#bedroomCount},
		"studyroomCount": ${Variables#studyroomCount},
		"otherroomCount": ${Variables#otherroomCount},
		"garageCount": ${Variables#garageCount},

		"rentMonthlyAmount": ${Variables#rentMonthlyAmount},

		//Waarde inhoud
		"contentsAmount": ${Variables#contentsAmount},

		//Extra risico's
		"verandaCount": ${Variables#verandaCount},
		"roofTypeCode": ${Variables#roofTypeCode},
		"outBuildingIndicator": false,

		//Opties polis
		"insuredAmountTheftPercentage": ${Variables#insuredAmountTheftPercentage},
		"indirectLossesPercentage": ${Variables#indirectLossesPercentage},

		//Waarborggroepen
		"contentsInsuranceWantedIndicator": true,
		"buildingInsuranceWantedIndicator": true,
		"contentsTheftInsuranceWantedIndicator": false,
		"legalAssistanceInsuranceWantedIndicator": false,
		

		//Andere
		"contractEffectiveDate": "${Variables#contractEffectiveDate}",
		"listedPropertyIndicator": false,
		"claimsPastFiveYearsAmount": 0,
		"buildingId": "grb_4782337.1N4Zl7p8jhpgKyforFjs3Obh5NQ",
		"payment": {
			"frequencyCode": "1"
			}
		}
	}
]</con:request><con:originalUri>https://test.api.coronadirect.be/external/home/insurance/v1/Quote</con:originalUri><con:assertion type="JsonPath Match" id="171976ff-924b-4802-915a-92efd76ae607" name="Assert BD"><con:configuration><path>$[0].results.coverages.grossPremium[0]</path><content>${Variables#BD}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="171976ff-924b-4802-915a-92efd76ae607" name="Assert CO"><con:configuration><path>$[0].results.coverages.grossPremium[1]</path><content>${Variables#CO}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="171976ff-924b-4802-915a-92efd76ae607" name="Assert CT"><con:configuration><path>$[0].results.coverages.grossPremium[2]</path><content>${Variables#CT}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="171976ff-924b-4802-915a-92efd76ae607" name="Assert LA"><con:configuration><path>$[0].results.coverages.grossPremium[3]</path><content>${Variables#LA}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="171976ff-924b-4802-915a-92efd76ae607" name="Assert AS"><con:configuration><path>$[0].results.coverages.grossPremium[4]</path><content>${Variables#AS}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties" id="5caea8f3-857b-49f4-9cd9-656cbbbca06c"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>BaseURL</con:name><con:value>https://test.api.coronadirect.be</con:value></con:property><con:property><con:name>ResourceURL</con:name><con:value>/external/home/insurance/v1/Quote</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Functions" id="af875706-b7ec-4542-bc32-376f66dd95e3"><con:settings/><con:config><script><![CDATA[

// -- FUNCTIONS --

class Functions{

    def context
    def testRunner
    def log
    
	// Find the column number for given column name
	def getColumn(name){
		def row = ws.getRow(0)
		def colmnNumber
		for (def j=1; j<totalColumns; j++) {
	     	def cell = row.getCell(j)
	       	//log.info cell.toString()
	       	if (cell.toString() == name){
	       	colmnNumber = j
	       	break;
	    		}
		}
		return colmnNumber
	}
	
	//create Error Log Text from given arguments
	def createErrorLogText(message, expected, result){
		errorLog << message + "\n"
		errorLog << "Expected: " + expected + "\n"
		errorLog << "Result: " + result + "\n"
		errorLog << "----------------------------------------\n\n"
	}
	
	
	//Initiate folders
	def checkAndCreateFolder(name){
		File directory = new File(path + "\\" + name + "\\" + date);
		if (! directory.exists()){
		directory.mkdir();
		}
	}
	
	//Save xls File
	def saveFile(name){
		try{
			FileOutputStream fileOut = new FileOutputStream(path + name + ".xls");
			wb.write(fileOut);
			fileOut.close();
		}
		catch(FileNotFoundException e){
			//when the file is open, save in new file	
			log.error "FILE OPEN"
			saveFile("Testcases_NEW");
		}
	}
	
	//Write all lines of the error list to the error-log-file
	def writeListAsLinesToLog(list, i){
		def errorLogFile = new File(path + "\\Fails\\" + date + "\\row " + (i+1) +".txt");
		for (line in list){
			//log.info line
			errorLogFile.append (line.toString());
		}
	}

	def printCall(){
		log.info "FUNCTION CALLED"
	}
}
]]></script></con:config></con:testStep><con:properties><con:property><con:name>grant_Type</con:name><con:value>client_credentials</con:value></con:property><con:property><con:name>scope</con:name><con:value>openid</con:value></con:property><con:property><con:name>validity_period</con:name><con:value>-2</con:value></con:property><con:property><con:name>yesterday</con:name><con:value>2022-03-08</con:value></con:property><con:property><con:name>currentDate</con:name><con:value>2022-03-09</con:value></con:property><con:property><con:name>tomorrow</con:name><con:value>2022-03-10</con:value></con:property><con:property><con:name>selectedToken</con:name><con:value>token2</con:value></con:property><con:property><con:name>requestLanguage</con:name><con:value>NL</con:value></con:property><con:property><con:name>email</con:name><con:value>testRunner@gmail.com</con:value></con:property><con:property><con:name>CommercialProduct</con:name><con:value>V1</con:value></con:property><con:property><con:name>Scenario</con:name><con:value>scn_004_Carv2Quote</con:value></con:property><con:property><con:name>ExternalContractNumber</con:name><con:value>mMethod</con:value></con:property><con:property><con:name>ExternalContractVersionNumber</con:name><con:value>1</con:value></con:property><con:property><con:name>activeFromDate</con:name><con:value>2022-03-09</con:value></con:property><con:property><con:name>activeToDate</con:name><con:value>2022-03-16</con:value></con:property><con:property><con:name>dialogResult</con:name><con:value>Run</con:value></con:property><con:property><con:name>firstName</con:name><con:value>${#TestCase#ExternalContractNumber}</con:value></con:property><con:property><con:name>organizationIdentifier</con:name><con:value>CORONA</con:value></con:property><con:property><con:name>transactionIdentifier</con:name><con:value>abcdef123456789</con:value></con:property><con:property><con:name>coronaTransactionIdentifier</con:name><con:value>4182c357ce7a4d268d4d131e90086c63</con:value></con:property><con:property><con:name>digitalSigning</con:name><con:value>true</con:value></con:property><con:property><con:name>packageType</con:name><con:value>BE</con:value></con:property><con:property><con:name>personalAssistance</con:name><con:value>true</con:value></con:property><con:property><con:name>luggage</con:name><con:value>false</con:value></con:property><con:property><con:name>policyReference</con:name><con:value>123-223-223</con:value></con:property><con:property><con:name>licensePlatesCar</con:name><con:value>"1ABC123","1XYZ456","1QRS789"</con:value></con:property><con:property><con:name>licensePlatesMotor</con:name><con:value>"1MAB123", "1MYZ456"</con:value></con:property><con:property><con:name>numberOfBicycles</con:name><con:value>3</con:value></con:property><con:property><con:name>numberOfPedelecs</con:name><con:value>1</con:value></con:property><con:property><con:name>numberOfHoverboards</con:name><con:value>0</con:value></con:property><con:property><con:name>numberOfSteps</con:name><con:value>1</con:value></con:property><con:property><con:name>numberOfSegways</con:name><con:value>1</con:value></con:property><con:property><con:name>propositionDate</con:name><con:value>2021-10-25</con:value></con:property><con:property><con:name>contractEffectiveDateKnown</con:name><con:value>true</con:value></con:property><con:property><con:name>contractEffectiveDate</con:name><con:value>2021-10-25</con:value></con:property><con:property><con:name>frequencyCode</con:name><con:value>12</con:value></con:property><con:property><con:name>meansCode</con:name><con:value>1</con:value></con:property><con:property><con:name>accountnumber</con:name><con:value>BE4700000000</con:value></con:property><con:property><con:name>bic</con:name><con:value>GBSDJKDSJ</con:value></con:property><con:property><con:name>familyName1</con:name><con:value>Klant</con:value></con:property><con:property><con:name>firstGivenName1</con:name><con:value>Test Senior</con:value></con:property><con:property><con:name>birthDate1</con:name><con:value>1980-10-01</con:value></con:property><con:property><con:name>genderCode1</con:name><con:value>1</con:value></con:property><con:property><con:name>streetName</con:name><con:value>Brusselsesteenweg</con:value></con:property><con:property><con:name>houseNumberIdentifier</con:name><con:value>2</con:value></con:property><con:property><con:name>boxNumberIdentifier</con:name><con:value>C</con:value></con:property><con:property><con:name>postalCode</con:name><con:value>2800</con:value></con:property><con:property><con:name>cityName</con:name><con:value>Kontich</con:value></con:property><con:property><con:name>languageCode</con:name><con:value>1</con:value></con:property><con:property><con:name>homeTelephone</con:name><con:value>031112233</con:value></con:property><con:property><con:name>emailAddress</con:name><con:value>test.senior@email.com</con:value></con:property><con:property><con:name>mobileTelephone</con:name><con:value>031112233</con:value></con:property><con:property><con:name>roleCode1</con:name><con:value>VM</con:value></con:property><con:property><con:name>familyName2</con:name><con:value>Klant</con:value></con:property><con:property><con:name>firstGivenName2</con:name><con:value>Test Junior</con:value></con:property><con:property><con:name>birthDate2</con:name><con:value>1960-10-01</con:value></con:property><con:property><con:name>genderCode2</con:name><con:value>1</con:value></con:property><con:property><con:name>roleCode2</con:name><con:value>FM</con:value></con:property><con:property><con:name>quotePost</con:name><con:value/></con:property><con:property><con:name>LoopOnReusableAction</con:name><con:value>1</con:value></con:property><con:property><con:name>reusableAction</con:name><con:value>quotecarv2</con:value></con:property></con:properties></con:testCase><con:testCase id="d71222bf-3796-4e66-bcd8-e6f650a852d5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SandBox" searchProperties="true"><con:settings/><con:testStep type="groovy" name="LoadTestData" id="2a3524a2-b0a3-44bd-a7c8-03f3167167b5"><con:settings/><con:config><script><![CDATA[import org.apache.poi.ss.usermodel.*
import org.apache.poi.hssf.usermodel.*
import org.apache.poi.ss.util.*
import groovy.json.JsonSlurper

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
def projectPath = groovyUtils.projectPath
def scriptPath = projectPath + "\\GroovyScripts\\"

def script = new GroovyScriptEngine( '.' ).with {
  loadScriptByName( 'Functions.groovy' )
} 
script.printCall()

//Global variables
date = new Date().format( 'yyyyMMdd' )
path = "C:\\SoapUITests\\";
def variables = testRunner.testCase.getTestStepByName("Variables")
def fail = false
errorLog = []

	
// Initiate EXCEL
 InputStream inputStream = new FileInputStream(path+"Testcases.xls");
 wb = WorkbookFactory.create(inputStream);
 ws = wb.getSheet("TestCases")  
 totalRows = ws.getPhysicalNumberOfRows()
 totalColumns = ws.getRow(0).getPhysicalNumberOfCells()

// Initiate LOG dirs
checkAndCreateFolder("Requests")
checkAndCreateFolder("Fails")


// Iterate rows / TESTCASES
for(def i=1; i<totalRows; i++){
	// RESET variables
	def request = ""
	def response = ""
	errorLog.clear()
	fail = false
	def row = ws.getRow(i)

	//Populate variables with data from excel
	for (var in variables.getPropertyList()){
		//the variable name is extracted from property list. Then, correct column is selected using the function 'getColumn()
		variables.setPropertyValue(var.getName(),row.getCell(getColumn(var.getName())).toString())
	 }
	
	//API call .run()
	testRunner.runTestStepByName("quotePost")

	//REQUEST being send
	request = context.expand( '${quotePost#RawRequest}' )
	
	//Create requestLog
	def requestLog = new File(path + "\\Requests\\" + date + "\\row " + (i+1) +".txt");
	requestLog.write (request);


	// -- RESPONSE --

	def httpResponseHeaders = context.testCase.testSteps["quotePost"].testRequest.response.responseHeaders
	def httpStatus = httpResponseHeaders["#status#"]
	def httpStatusCode = (httpStatus =~ "[1-5]\\d\\d")[0]

	
		//if JSON is not correct, statusCode will be 500
	if (httpStatusCode != "500"){
		response = context.expand( '${quotePost#Response}' )
		def jsonSlurper = new JsonSlurper()
		def object = jsonSlurper.parseText(response)
		
	// -- ASSERTIONS --
	
			//Check if server accepted the request
		try {
	 		assert object[0].control.applicationReturnCode == '00000'
		}
		catch (AssertionError e) {
			fail = true
			createErrorLogText("ApplicationReturnCode not '00000' \n" + "errorMessage: " + object[0].control.errorMessage ,"00000",object[0].control.applicationReturnCode)
		}
		
			//Check if BD - Building is as expected
		try {
	 		assert object[0].results.coverages[0].grossPremium.toString() == variables.getPropertyValue("BD")
		}
		catch (AssertionError e) {
			fail = true
			createErrorLogText("BD - Building premium FAIL",variables.getPropertyValue("BD"),object[0].results.coverages[0].grossPremium)
		}	
		
			//Check if CO / Contents is as expected
		try {
	 		assert object[0].results.coverages[1].grossPremium.toString() == variables.getPropertyValue("CO")
		}
		catch (AssertionError e) {
			fail = true
			createErrorLogText("CO / Contents premium FAIL",variables.getPropertyValue("CO"),object[0].results.coverages[1].grossPremium)
		}	
		
			//Check if CT / ContentsTheft is as expected
		try {
	 		assert object[0].results.coverages[2].grossPremium.toString() == variables.getPropertyValue("CT")
		}
		catch (AssertionError e) {
			fail = true
			createErrorLogText("CT / ContentsTheft premium FAIL",variables.getPropertyValue("CT"),object[0].results.coverages[2].grossPremium)
		}	
		
			//Check if LA / LegalAssistance is as expected
		try {
	 		assert object[0].results.coverages[3].grossPremium.toString() == variables.getPropertyValue("LA")
		}
		catch (AssertionError e) {
			fail = true
			createErrorLogText("LA / LegalAssistance premium FAIL",variables.getPropertyValue("LA"),object[0].results.coverages[3].grossPremium)
		}	
			//Check if AS / Assistance is as expected
		try {
	 		assert object[0].results.coverages[4].grossPremium.toString() == variables.getPropertyValue("AS")
		}
		catch (AssertionError e) {
			fail = true
			createErrorLogText("AS / Assistance premium FAIL",variables.getPropertyValue("AS"),object[0].results.coverages[4].grossPremium)
		}	
	}
	// When httpStatusCode == 500:
	else{ 
		fail = true
		errorLog << "JSON error"
		errorLog << httpStatus
	}
		
	//Create and write Logs
	if (fail){
		log.error "  Row " + (i+1) + " - FAIL"
		writeListAsLinesToLog(errorLog,i);
		row.createCell(0).setCellValue("FAIL");
	}
	else{
		log.info "  Row " + (i+1) + " - PASS"
		row.createCell(0).setCellValue("PASS");
	}


	stop loop
	if(i == 1){
		break;
	}
}

//Save file
saveFile("Testcases");



// -- FUNCTIONS --

// Find the column number for given column name
def getColumn(name){
	def row = ws.getRow(0)
	def colmnNumber
	for (def j=1; j<totalColumns; j++) {
     	def cell = row.getCell(j)
       	//log.info cell.toString()
       	if (cell.toString() == name){
       	colmnNumber = j
       	break;
    		}
	}
	return colmnNumber
}

//create Error Log Text from given arguments
def createErrorLogText(message, expected, result){
	errorLog << message + "\n"
	errorLog << "Expected: " + expected + "\n"
	errorLog << "Result: " + result + "\n"
	errorLog << "----------------------------------------\n\n"
}


//Initiate folders
def checkAndCreateFolder(name){
	File directory = new File(path + "\\" + name + "\\" + date);
	if (! directory.exists()){
	directory.mkdir();
	}
}

//Save xls File
def saveFile(name){
	try{
		FileOutputStream fileOut = new FileOutputStream(path + name + ".xls");
		wb.write(fileOut);
		fileOut.close();
	}
	catch(FileNotFoundException e){
		//when the file is open, save in new file	
		log.error "FILE OPEN"
		saveFile("Testcases_NEW");
	}
}

//Write all lines of the error list to the error-log-file
def writeListAsLinesToLog(list, i){
	def errorLogFile = new File(path + "\\Fails\\" + date + "\\row " + (i+1) +".txt");
	for (line in list){
		//log.info line
		errorLogFile.append (line.toString());
	}
}


]]></script></con:config></con:testStep><con:testStep type="properties" name="Variables" id="322da5e8-63b7-45f7-99f7-77111bd3b48a"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>volume</con:name><con:value>500</con:value></con:property><con:property><con:name>verandaCount</con:name><con:value>0</con:value></con:property><con:property><con:name>valuationChoice</con:name><con:value>AP</con:value></con:property><con:property><con:name>studyroomCount</con:name><con:value>0</con:value></con:property><con:property><con:name>streetName</con:name><con:value>Asstraat</con:value></con:property><con:property><con:name>secondHomeIndicator</con:name><con:value>false</con:value></con:property><con:property><con:name>saloncount</con:name><con:value>1</con:value></con:property><con:property><con:name>roofTypeCode</con:name><con:value>1</con:value></con:property><con:property><con:name>rentMonthlyAmount</con:name><con:value>750</con:value></con:property><con:property><con:name>postalCode</con:name><con:value>1000</con:value></con:property><con:property><con:name>otherroomCount</con:name><con:value>0</con:value></con:property><con:property><con:name>LA</con:name><con:value>11.89</con:value></con:property><con:property><con:name>insuredAmountTheftPercentage</con:name><con:value>50</con:value></con:property><con:property><con:name>indirectLossesPercentage</con:name><con:value>10</con:value></con:property><con:property><con:name>housePropertyTypeCode</con:name><con:value>1</con:value></con:property><con:property><con:name>houseNumber</con:name><con:value>1</con:value></con:property><con:property><con:name>groundFloor</con:name><con:value>false</con:value></con:property><con:property><con:name>garageCount</con:name><con:value>0</con:value></con:property><con:property><con:name>dwellingTypeCode</con:name><con:value>2</con:value></con:property><con:property><con:name>diningroomCount</con:name><con:value>1</con:value></con:property><con:property><con:name>CT</con:name><con:value>104.18</con:value></con:property><con:property><con:name>contractEffectiveDate</con:name><con:value>2022-05-25</con:value></con:property><con:property><con:name>contentsAmount</con:name><con:value>60000</con:value></con:property><con:property><con:name>commercialUsageIndicator</con:name><con:value>false</con:value></con:property><con:property><con:name>CO</con:name><con:value>0.0</con:value></con:property><con:property><con:name>cityName</con:name><con:value>BRUSSEL</con:value></con:property><con:property><con:name>bedroomCount</con:name><con:value>3</con:value></con:property><con:property><con:name>BD</con:name><con:value>0.0</con:value></con:property><con:property><con:name>bathroomCount</con:name><con:value>1</con:value></con:property><con:property><con:name>AS</con:name><con:value>229.64</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="quotePost" id="4ad70bcb-45b7-4255-9d86-722a5702da08"><con:settings/><con:config service="https://test.api.coronadirect.be" resourcePath="/external/home/insurance/v1/Quote" methodName="Quote 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="quotePost" id="25618d6b-21dd-46cf-ba8e-f74838a97427" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">&#13;
  &lt;con:entry key="Content-type" value="application/json"/>&#13;
  &lt;con:entry key="Ocp-Apim-Subscription-Key" value="c21c90b45aeb4940ba952ccb71b52ed2"/>&#13;
  &lt;con:entry key="Cache-Control" value="no-cache"/>&#13;
&lt;/xml-fragment></con:setting></con:settings><con:encoding/><con:endpoint>https://test.api.coronadirect.be</con:endpoint><con:request>[
	{
	"requester": {
		"transactionIdentifier": "7CB961CC6EFA47C2C3DB57B78712D653",
		"organizationIdentifier": "CORONA",
		"coronaTransactionIdentifier": "1ADC44F8173A90D89226158CC176BDE2"
		},
		
	"persons": {
		"policyHolder": {
			"streetName": "${Variables#streetName}",
			"houseNumberIdentifier": "${Variables#houseNumber}",
			"postalCode": "${Variables#postalCode}",
			"cityName": "${Variables#cityName}",
						
			"languageCode": "2",
			"genderCode": "1",
			"firstGivenName": "KDH",
			"familyName": "Corona",
			"eMailAddress": "koen.dhoore@coronadirect.be",
			"birthDate": "1982-01-01"
			}
		},
	"contract": {
		//Adres variabelen
		"houseAddressEqualsPolicyHolderAddress":true,
		"secondHomeIndicator": ${Variables#secondHomeIndicator},

		//Woning variabelen
		"housePropertyTypeCode": "${Variables#housePropertyTypeCode}", 
		"dwellingTypeCode": "${Variables#dwellingTypeCode}",
		"commercialUsageIndicator": ${Variables#commercialUsageIndicator}, 
		"groundFloor": ${Variables#groundFloor},     

		//Waardebepaling van de woning			
		"valuationChoice": "${Variables#valuationChoice}",
		"volume": ${Variables#volume},
		
		"salonCount": ${Variables#salonCount},
		"diningroomCount": ${Variables#diningroomCount},
		"bathroomCount": ${Variables#bathroomCount},
		"bedroomCount": ${Variables#bedroomCount},
		"studyroomCount": ${Variables#studyroomCount},
		"otherroomCount": ${Variables#otherroomCount},
		"garageCount": ${Variables#garageCount},

		"rentMonthlyAmount": ${Variables#rentMonthlyAmount},

		//Waarde inhoud
		"contentsAmount": ${Variables#contentsAmount},

		//Extra risico's
		"verandaCount": ${Variables#verandaCount},
		"roofTypeCode": ${Variables#roofTypeCode},
		"outBuildingIndicator": false,

		//Opties polis
		"insuredAmountTheftPercentage": ${Variables#insuredAmountTheftPercentage},
		"indirectLossesPercentage": ${Variables#indirectLossesPercentage},

		//Waarborggroepen
		"contentsInsuranceWantedIndicator": true,
		"buildingInsuranceWantedIndicator": true,
		"contentsTheftInsuranceWantedIndicator": false,
		"legalAssistanceInsuranceWantedIndicator": false,
		

		//Andere
		"contractEffectiveDate": "${Variables#contractEffectiveDate}",
		"listedPropertyIndicator": false,
		"claimsPastFiveYearsAmount": 0,
		"buildingId": "grb_4782337.1N4Zl7p8jhpgKyforFjs3Obh5NQ",
		"payment": {
			"frequencyCode": "1"
			}
		}
	}
]</con:request><con:originalUri>https://test.api.coronadirect.be/external/home/insurance/v1/Quote</con:originalUri><con:assertion type="JsonPath Match" id="171976ff-924b-4802-915a-92efd76ae607" name="Assert BD"><con:configuration><path>$[0].results.coverages.grossPremium[0]</path><content>${Variables#BD}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="171976ff-924b-4802-915a-92efd76ae607" name="Assert CO"><con:configuration><path>$[0].results.coverages.grossPremium[1]</path><content>${Variables#CO}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="171976ff-924b-4802-915a-92efd76ae607" name="Assert CT"><con:configuration><path>$[0].results.coverages.grossPremium[2]</path><content>${Variables#CT}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="171976ff-924b-4802-915a-92efd76ae607" name="Assert LA"><con:configuration><path>$[0].results.coverages.grossPremium[3]</path><content>${Variables#LA}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="171976ff-924b-4802-915a-92efd76ae607" name="Assert AS"><con:configuration><path>$[0].results.coverages.grossPremium[4]</path><content>${Variables#AS}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties" id="4e3911ae-8fba-4d54-9efb-d609a4b5015b"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>BaseURL</con:name><con:value>https://test.api.coronadirect.be</con:value></con:property><con:property><con:name>ResourceURL</con:name><con:value>/external/home/insurance/v1/Quote</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Functions" id="e88f2499-5c19-4c62-8baf-8358a927a755"><con:settings/><con:config><script><![CDATA[

// -- FUNCTIONS --

class Functions{

    def context
    def testRunner
    def log
    
	// Find the column number for given column name
	def getColumn(name){
		def row = ws.getRow(0)
		def colmnNumber
		for (def j=1; j<totalColumns; j++) {
	     	def cell = row.getCell(j)
	       	//log.info cell.toString()
	       	if (cell.toString() == name){
	       	colmnNumber = j
	       	break;
	    		}
		}
		return colmnNumber
	}
	
	//create Error Log Text from given arguments
	def createErrorLogText(message, expected, result){
		errorLog << message + "\n"
		errorLog << "Expected: " + expected + "\n"
		errorLog << "Result: " + result + "\n"
		errorLog << "----------------------------------------\n\n"
	}
	
	
	//Initiate folders
	def checkAndCreateFolder(name){
		File directory = new File(path + "\\" + name + "\\" + date);
		if (! directory.exists()){
		directory.mkdir();
		}
	}
	
	//Save xls File
	def saveFile(name){
		try{
			FileOutputStream fileOut = new FileOutputStream(path + name + ".xls");
			wb.write(fileOut);
			fileOut.close();
		}
		catch(FileNotFoundException e){
			//when the file is open, save in new file	
			log.error "FILE OPEN"
			saveFile("Testcases_NEW");
		}
	}
	
	//Write all lines of the error list to the error-log-file
	def writeListAsLinesToLog(list, i){
		def errorLogFile = new File(path + "\\Fails\\" + date + "\\row " + (i+1) +".txt");
		for (line in list){
			//log.info line
			errorLogFile.append (line.toString());
		}
	}

	def printCall(){
		log.info "FUNCTION CALLED"
	}
}
]]></script></con:config></con:testStep><con:properties><con:property><con:name>grant_Type</con:name><con:value>client_credentials</con:value></con:property><con:property><con:name>scope</con:name><con:value>openid</con:value></con:property><con:property><con:name>validity_period</con:name><con:value>-2</con:value></con:property><con:property><con:name>yesterday</con:name><con:value>2022-03-08</con:value></con:property><con:property><con:name>currentDate</con:name><con:value>2022-03-09</con:value></con:property><con:property><con:name>tomorrow</con:name><con:value>2022-03-10</con:value></con:property><con:property><con:name>selectedToken</con:name><con:value>token2</con:value></con:property><con:property><con:name>requestLanguage</con:name><con:value>NL</con:value></con:property><con:property><con:name>email</con:name><con:value>testRunner@gmail.com</con:value></con:property><con:property><con:name>CommercialProduct</con:name><con:value>V1</con:value></con:property><con:property><con:name>Scenario</con:name><con:value>scn_004_Carv2Quote</con:value></con:property><con:property><con:name>ExternalContractNumber</con:name><con:value>mMethod</con:value></con:property><con:property><con:name>ExternalContractVersionNumber</con:name><con:value>1</con:value></con:property><con:property><con:name>activeFromDate</con:name><con:value>2022-03-09</con:value></con:property><con:property><con:name>activeToDate</con:name><con:value>2022-03-16</con:value></con:property><con:property><con:name>dialogResult</con:name><con:value>Run</con:value></con:property><con:property><con:name>firstName</con:name><con:value>${#TestCase#ExternalContractNumber}</con:value></con:property><con:property><con:name>organizationIdentifier</con:name><con:value>CORONA</con:value></con:property><con:property><con:name>transactionIdentifier</con:name><con:value>abcdef123456789</con:value></con:property><con:property><con:name>coronaTransactionIdentifier</con:name><con:value>4182c357ce7a4d268d4d131e90086c63</con:value></con:property><con:property><con:name>digitalSigning</con:name><con:value>true</con:value></con:property><con:property><con:name>packageType</con:name><con:value>BE</con:value></con:property><con:property><con:name>personalAssistance</con:name><con:value>true</con:value></con:property><con:property><con:name>luggage</con:name><con:value>false</con:value></con:property><con:property><con:name>policyReference</con:name><con:value>123-223-223</con:value></con:property><con:property><con:name>licensePlatesCar</con:name><con:value>"1ABC123","1XYZ456","1QRS789"</con:value></con:property><con:property><con:name>licensePlatesMotor</con:name><con:value>"1MAB123", "1MYZ456"</con:value></con:property><con:property><con:name>numberOfBicycles</con:name><con:value>3</con:value></con:property><con:property><con:name>numberOfPedelecs</con:name><con:value>1</con:value></con:property><con:property><con:name>numberOfHoverboards</con:name><con:value>0</con:value></con:property><con:property><con:name>numberOfSteps</con:name><con:value>1</con:value></con:property><con:property><con:name>numberOfSegways</con:name><con:value>1</con:value></con:property><con:property><con:name>propositionDate</con:name><con:value>2021-10-25</con:value></con:property><con:property><con:name>contractEffectiveDateKnown</con:name><con:value>true</con:value></con:property><con:property><con:name>contractEffectiveDate</con:name><con:value>2021-10-25</con:value></con:property><con:property><con:name>frequencyCode</con:name><con:value>12</con:value></con:property><con:property><con:name>meansCode</con:name><con:value>1</con:value></con:property><con:property><con:name>accountnumber</con:name><con:value>BE4700000000</con:value></con:property><con:property><con:name>bic</con:name><con:value>GBSDJKDSJ</con:value></con:property><con:property><con:name>familyName1</con:name><con:value>Klant</con:value></con:property><con:property><con:name>firstGivenName1</con:name><con:value>Test Senior</con:value></con:property><con:property><con:name>birthDate1</con:name><con:value>1980-10-01</con:value></con:property><con:property><con:name>genderCode1</con:name><con:value>1</con:value></con:property><con:property><con:name>streetName</con:name><con:value>Brusselsesteenweg</con:value></con:property><con:property><con:name>houseNumberIdentifier</con:name><con:value>2</con:value></con:property><con:property><con:name>boxNumberIdentifier</con:name><con:value>C</con:value></con:property><con:property><con:name>postalCode</con:name><con:value>2800</con:value></con:property><con:property><con:name>cityName</con:name><con:value>Kontich</con:value></con:property><con:property><con:name>languageCode</con:name><con:value>1</con:value></con:property><con:property><con:name>homeTelephone</con:name><con:value>031112233</con:value></con:property><con:property><con:name>emailAddress</con:name><con:value>test.senior@email.com</con:value></con:property><con:property><con:name>mobileTelephone</con:name><con:value>031112233</con:value></con:property><con:property><con:name>roleCode1</con:name><con:value>VM</con:value></con:property><con:property><con:name>familyName2</con:name><con:value>Klant</con:value></con:property><con:property><con:name>firstGivenName2</con:name><con:value>Test Junior</con:value></con:property><con:property><con:name>birthDate2</con:name><con:value>1960-10-01</con:value></con:property><con:property><con:name>genderCode2</con:name><con:value>1</con:value></con:property><con:property><con:name>roleCode2</con:name><con:value>FM</con:value></con:property><con:property><con:name>quotePost</con:name><con:value/></con:property><con:property><con:name>LoopOnReusableAction</con:name><con:value>1</con:value></con:property><con:property><con:name>reusableAction</con:name><con:value>quotecarv2</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>BaseURL</con:name><con:value>https://test.api.coronadirect.be</con:value></con:property></con:properties></con:testSuite><con:properties><con:property><con:name>BaseURL</con:name><con:value>https://test.api.coronadirect.be</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>
